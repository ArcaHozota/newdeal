// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HymnsColumns holds the columns for the "hymns" table.
	HymnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "name_jp", Type: field.TypeString},
		{Name: "name_kr", Type: field.TypeString},
		{Name: "link", Type: field.TypeString},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "updated_user", Type: field.TypeInt64, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "serif", Type: field.TypeString, Size: 2147483647},
		{Name: "visible_flg", Type: field.TypeBool},
		{Name: "student_hymns", Type: field.TypeInt64, Nullable: true, SchemaType: map[string]string{"postgres": "bigint"}},
	}
	// HymnsTable holds the schema information for the "hymns" table.
	HymnsTable = &schema.Table{
		Name:       "hymns",
		Columns:    HymnsColumns,
		PrimaryKey: []*schema.Column{HymnsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hymns_students_hymns",
				Columns:    []*schema.Column{HymnsColumns[8]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hymn_id_link_name_jp_name_kr",
				Unique:  true,
				Columns: []*schema.Column{HymnsColumns[0], HymnsColumns[3], HymnsColumns[1], HymnsColumns[2]},
			},
		},
	}
	// HymnsWorksColumns holds the columns for the "hymns_works" table.
	HymnsWorksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "work_id", Type: field.TypeInt64, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "score", Type: field.TypeBytes},
		{Name: "name_jp_rational", Type: field.TypeString},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "biko", Type: field.TypeString},
		{Name: "hymn_hymns_work", Type: field.TypeInt64, Unique: true, SchemaType: map[string]string{"postgres": "bigint"}},
	}
	// HymnsWorksTable holds the schema information for the "hymns_works" table.
	HymnsWorksTable = &schema.Table{
		Name:       "hymns_works",
		Columns:    HymnsWorksColumns,
		PrimaryKey: []*schema.Column{HymnsWorksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hymns_works_hymns_hymns_work",
				Columns:    []*schema.Column{HymnsWorksColumns[6]},
				RefColumns: []*schema.Column{HymnsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hymnswork_work_id",
				Unique:  true,
				Columns: []*schema.Column{HymnsWorksColumns[1]},
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "login_account", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "date_of_birth", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "email", Type: field.TypeString},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "visible_flg", Type: field.TypeBool},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "student_id_login_account_email",
				Unique:  true,
				Columns: []*schema.Column{StudentsColumns[0], StudentsColumns[1], StudentsColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HymnsTable,
		HymnsWorksTable,
		StudentsTable,
	}
)

func init() {
	HymnsTable.ForeignKeys[0].RefTable = StudentsTable
	HymnsWorksTable.ForeignKeys[0].RefTable = HymnsTable
}
