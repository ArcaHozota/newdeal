// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// HymnsColumns holds the columns for the "hymns" table.
	HymnsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "name_jp", Type: field.TypeString, Size: 66},
		{Name: "name_kr", Type: field.TypeString, Size: 66},
		{Name: "link", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "serif", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "visible_flg", Type: field.TypeBool},
		{Name: "updated_user", Type: field.TypeInt64, SchemaType: map[string]string{"postgres": "bigint"}},
	}
	// HymnsTable holds the schema information for the "hymns" table.
	HymnsTable = &schema.Table{
		Name:       "hymns",
		Columns:    HymnsColumns,
		PrimaryKey: []*schema.Column{HymnsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hymns_students_updated_hymns",
				Columns:    []*schema.Column{HymnsColumns[7]},
				RefColumns: []*schema.Column{StudentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hymn_link",
				Unique:  true,
				Columns: []*schema.Column{HymnsColumns[3]},
			},
			{
				Name:    "hymn_name_jp",
				Unique:  true,
				Columns: []*schema.Column{HymnsColumns[1]},
			},
			{
				Name:    "hymn_name_kr",
				Unique:  true,
				Columns: []*schema.Column{HymnsColumns[2]},
			},
		},
	}
	// HymnsWorkColumns holds the columns for the "hymns_work" table.
	HymnsWorkColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "score", Type: field.TypeBytes, Nullable: true},
		{Name: "name_jp_rational", Type: field.TypeString, Nullable: true, Size: 120},
		{Name: "updated_time", Type: field.TypeTime},
		{Name: "biko", Type: field.TypeString, Nullable: true, Size: 10},
		{Name: "work_id", Type: field.TypeInt64, Unique: true, SchemaType: map[string]string{"postgres": "bigint"}},
	}
	// HymnsWorkTable holds the schema information for the "hymns_work" table.
	HymnsWorkTable = &schema.Table{
		Name:       "hymns_work",
		Columns:    HymnsWorkColumns,
		PrimaryKey: []*schema.Column{HymnsWorkColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hymns_work_hymns_work",
				Columns:    []*schema.Column{HymnsWorkColumns[5]},
				RefColumns: []*schema.Column{HymnsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, SchemaType: map[string]string{"postgres": "bigint"}},
		{Name: "login_account", Type: field.TypeString, Size: 40},
		{Name: "password", Type: field.TypeString, Size: 255},
		{Name: "username", Type: field.TypeString, Size: 40},
		{Name: "date_of_birth", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "email", Type: field.TypeString, Nullable: true, Size: 60},
		{Name: "updated_time", Type: field.TypeTime, Nullable: true},
		{Name: "visible_flg", Type: field.TypeBool},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "student_login_account",
				Unique:  true,
				Columns: []*schema.Column{StudentsColumns[1]},
			},
			{
				Name:    "student_email",
				Unique:  true,
				Columns: []*schema.Column{StudentsColumns[5]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		HymnsTable,
		HymnsWorkTable,
		StudentsTable,
	}
)

func init() {
	HymnsTable.ForeignKeys[0].RefTable = StudentsTable
	HymnsTable.Annotation = &entsql.Annotation{
		Table: "hymns",
	}
	HymnsWorkTable.ForeignKeys[0].RefTable = HymnsTable
	HymnsWorkTable.Annotation = &entsql.Annotation{
		Table: "hymns_work",
	}
	StudentsTable.Annotation = &entsql.Annotation{
		Table: "students",
	}
}
